{"version":3,"sources":["components/header.js","actions/ActionTypes.js","containers/CreateForm.js","actions/index.js","components/Counter.js","components/CounterList.js","containers/CounterContainer.js","containers/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["Header","react_default","a","createElement","className","class","href","Component","INCREMENT","DECREMENT","RESET","COUNTERREMOVE","CREATE","connect","_ref","input","dispatch","onSubmit","e","title","preventDefault","value","type","types","placeholder","ref","node","Counter","index","onCounterremove","countNumber","onIncrement","onReset","onDecrement","onClick","defaultProps","console","warn","CounterList","counters","counterList","map","counter","i","src_components_Counter","Object","assign","key","CounterContainer","state","actions","App","components_header","containers_CreateForm","containers_CounterContainer","Boolean","window","location","hostname","match","initialState","arguments","length","undefined","action","concat","toConsumableArray","slice","objectSpread","store","createStore","reducers","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.894a3f69.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-dark navbg\">\r\n                <div className=\"container\">\r\n                    <div className=\"row m-auto fs\">\r\n                    <i class=\"far fa-hand-point-up fa-2x text-white\"></i>\r\n                    <div className=\"ml-2 my-auto text-light\" href=\"/\">Multi-counter</div>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const RESET = 'RESET';\r\nexport const COUNTERREMOVE = 'COUNTERREMOVE';\r\nexport const CREATE = 'CREATE';","import React from 'react'\r\nimport * as actions from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport '../components/CreateForm.css';\r\n\r\nconst CreateForm = ({ dispatch }) => {\r\n    let input;\r\n  \r\n    return (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <form class=\"form-inline my-2 my-lg-0\" onSubmit={e => {\r\n          e.preventDefault()\r\n          dispatch(actions.create(input.value))\r\n          input.value = ''\r\n        }}>\r\n          <input class=\"form-control mr-sm-2\" placeholder=\"Title\" ref={node => input = node} />\r\n          <button type=\"submit\" class=\"btn btn-outline-success my-2 my-sm-0\">\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default connect()(CreateForm);","import * as types from './ActionTypes';\r\n\r\nexport const increment = (index) => ({\r\n    type: types.INCREMENT,\r\n    index\r\n});\r\n\r\nexport const decrement = (index) => ({\r\n    type: types.DECREMENT,\r\n    index\r\n});\r\n\r\nexport const reset = (index) => ({\r\n    type: types.RESET,\r\n    index\r\n});\r\n\r\nexport const counterremove = (index) => ({\r\n    type: types.COUNTERREMOVE,\r\n    index\r\n});\r\n\r\nexport const create = (title) => ({\r\n    type: types.CREATE,\r\n    title\r\n});","import React from 'react';\r\nimport './Counter.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Counter = ({ index, title, onCounterremove, countNumber, onIncrement, onReset, onDecrement }) => {\r\n    return (\r\n            <div className=\"mt-5 counter border border-secondary rounded\">\r\n                <div className=\"title-input text-white counter-title bg-info d-flex justify-content-center\">\r\n                    <div>{title}</div>\r\n                    <div>\r\n                        <button className=\"counterremove\" onClick={ () => onCounterremove(index) }><i class=\"far fa-trash-alt\"></i></button>\r\n                        <button className=\"countermodify\"><i class=\"fas fa-pen\"></i></button>\r\n                    </div>\r\n                </div>\r\n                    <div className=\"counter-display d-flex align-items-center bg-light text-secondary\">                        \r\n                    <div className=\"mx-auto display-1 font-weight-bold\">{ countNumber }</div>\r\n                </div>\r\n                <div className=\"counter-panel d-flex flex-row\">\r\n                    <button className=\"btn btn-success w-100\" onClick={ () => onIncrement(index) }>\r\n                        <i className=\"fa fa-plus fa-2x\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-warning w-80\" onClick={ () => onReset(index) }>\r\n                    <i class=\"fas fa-redo-alt fa-2x\"></i>\r\n                    </button>\r\n                    <button className=\"btn btn-danger w-100\" onClick={ () => onDecrement(index) }>\r\n                        <i className=\"fa fa-minus fa-2x\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nCounter.propTypes = {\r\n    countNumber: PropTypes.number,\r\n    title: PropTypes.string,\r\n    onCounterremove: PropTypes.func,\r\n    onIncrement: PropTypes.func,\r\n    onReset: PropTypes.func,\r\n    onDecrement: PropTypes.func\r\n};\r\n\r\nCounter.defaultProps = {\r\n    countNumber: 0,\r\n    title: '',\r\n    onCounterremove: () => console.warn('onCounterremove not defined'),\r\n    onIncrement: () => console.warn('onIncrement not defined'),\r\n    onReset: () => console.warn('onReset not defined'),\r\n    onDecrement: () => console.warn('onDecrement not defined')\r\n}\r\n\r\nexport default Counter;","import React from 'react';\r\nimport Counter from './Counter';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CounterList = ({counters, onCounterremove, onIncrement, onReset, onDecrement}) => {\r\n    const counterList = counters.map(\r\n        (counter, i) => (\r\n            <Counter \r\n                key={i}\r\n                index={i}\r\n                {...counter}\r\n                onCounterremove={onCounterremove}\r\n                onIncrement={onIncrement}\r\n                onReset={onReset}\r\n                onDecrement={onDecrement}\r\n            />\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div className=\"d-flex flex-wrap\">\r\n            {counterList}\r\n        </div>\r\n    );\r\n};\r\n\r\nCounterList.propTypes = {\r\n    counters: PropTypes.arrayOf(PropTypes.shape({\r\n        countNumber: PropTypes.number,\r\n        title: PropTypes.string\r\n    })),\r\n    onCounterremove: PropTypes.func,\r\n    onIncrement: PropTypes.func,\r\n    onDecrement: PropTypes.func,\r\n    onReset: PropTypes.func\r\n};\r\n\r\nCounterList.defaultProps = {\r\n    counters: [],\r\n    onCounterremove: () => console.warn('onCounterremove not defined'),\r\n    onIncrement: () => console.warn('onIncrement not defined'),\r\n    onDecrement: () => console.warn('onDecrement not defined'),\r\n    onReset: () => console.warn('onReset not defined')\r\n};\r\n\r\nexport default CounterList;","import CounterList from '../components/CounterList';\r\nimport * as actions from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    counters: state.counters\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onCounterremove: (index) => dispatch(actions.counterremove(index)),\r\n    onIncrement: (index) => dispatch(actions.increment(index)),\r\n    onReset: (index) => dispatch(actions.reset(index)),\r\n    onDecrement: (index) => dispatch(actions.decrement(index))\r\n});\r\n\r\nconst CounterContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CounterList);\r\n\r\nexport default CounterContainer;","import React, { Component } from 'react';\nimport Header from '../components/header';\nimport CreateForm from './CreateForm';\nimport CounterContainer from './CounterContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <CreateForm />\n        <CounterContainer/>\n        \n      </div>\n    );\n  }\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    counters: [\r\n        {\r\n            countNumber: 0,\r\n            title: ''\r\n        }\r\n    ]\r\n};\r\n\r\nfunction counter(state = initialState, action) {\r\n    const {counters} = state;\r\n    switch (action.type) {\r\n       case types.CREATE:\r\n            return {\r\n                counters: [\r\n                    ...counters, {\r\n                        countNumber: 0,\r\n                        title: action.title\r\n                    }\r\n                ]\r\n            };\r\n        case types.COUNTERREMOVE:\r\n            return {\r\n                counters: [\r\n                    ...counters.slice(0, action.index),\r\n                    ...counters.slice(action.index+1, counters.length)\r\n                ]\r\n            };\r\n        case types.INCREMENT:\r\n            return {\r\n                counters: [\r\n                    ...counters.slice(0, action.index), {\r\n                        ...counters[action.index],\r\n                        countNumber: counters[action.index].countNumber + 1,\r\n                    },\r\n                    ...counters.slice(action.index+1, counters.length)\r\n                ]\r\n            };\r\n        case types.RESET:\r\n            return {\r\n                counters: [\r\n                    ...counters.slice(0, action.index), {\r\n                        ...counters[action.index],\r\n                        countNumber: 0\r\n                    },\r\n                    ...counters.slice(action.index+1, counters.length)\r\n                ]\r\n            };\r\n        case types.DECREMENT:\r\n            return {\r\n                counters: [\r\n                    ...counters.slice(0, action.index), {\r\n                        ...counters[action.index],\r\n                        countNumber: counters[action.index].countNumber - 1\r\n                    },\r\n                    ...counters.slice(action.index+1, counters.length)\r\n                ]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default counter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport reducers from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}